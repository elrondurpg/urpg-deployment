- name: "Create required directories in /etc/letsencrypt"
  become: yes
  file:
    path: "/etc/letsencrypt/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=x,o=x
  with_items:
  - account
  - certs
  - csrs
  - keys

- find:
    paths: "{{ letsencrypt_certs_dir }}"
    pattern: "fullchain_{{ domain_name }}.crt"
    age: 80d
  register: certificate_about_to_expire

- name: "Generate a Let's Encrypt account key"
  become: yes
  shell: "openssl genrsa 4096 | sudo tee {{ letsencrypt_account_key }}"
  when: certificate_about_to_expire.files | length > 0

- name: "Generate Let's Encrypt private key"
  become: yes
  shell: "openssl genrsa 4096 | sudo tee {{ letsencrypt_keys_dir }}/{{ domain_name }}.key"
  when: certificate_about_to_expire.files | length > 0

- name: "Generate Let's Encrypt CSR"
  become: yes
  shell: "openssl req -new -sha256 -key {{ letsencrypt_keys_dir }}/{{ domain_name }}.key -subj \"/CN={{ domain_name }}\" | tee {{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
  args:
    executable: /bin/bash
  when: certificate_about_to_expire.files | length > 0

- name: "Begin Let's Encrypt challenges"
  become: yes
  acme_certificate:
    acme_directory: "{{ acme_directory }}"
    acme_version: "{{ acme_version }}"
    account_key_src: "{{ letsencrypt_account_key }}"
    account_email: "{{ acme_email }}"
    terms_agreed: 1
    challenge: "{{ acme_challenge_type }}"
    csr: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
    dest: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.crt"
    fullchain_dest: "{{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}.crt"
    remaining_days: 91
    force: yes
    deactivate_authzs: yes
  register: acme_challenge_my_domain
  when: certificate_about_to_expire.files | length > 0

- name: "Create .well-known/acme-challenge directory"
  become: yes
  file:
    path: /var/www/html/.well-known/acme-challenge
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
  when: certificate_about_to_expire.files | length > 0

- name: "Implement http-01 challenge files"
  become: yes
  copy:
    content: "{{ acme_challenge_my_domain['challenge_data'][item]['http-01']['resource_value'] }}"
    dest: "/var/www/html/{{ acme_challenge_my_domain['challenge_data'][item]['http-01']['resource'] }}"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  with_items:
  - "{{ domain_name }}"
  when: certificate_about_to_expire.files | length > 0

- name: "Complete Let's Encrypt challenges"
  become: yes
  acme_certificate:
    acme_directory: "{{ acme_directory }}"
    acme_version: "{{ acme_version }}"
    account_key_src: "{{ letsencrypt_account_key }}"
    account_email: "{{ acme_email }}"
    challenge: "{{ acme_challenge_type }}"
    csr: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
    dest: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.crt"
    chain_dest: "{{ letsencrypt_certs_dir }}/chain_{{ domain_name }}.crt"
    fullchain_dest: "{{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}.crt"
    data: "{{ acme_challenge_my_domain }}"
    force: yes
    deactivate_authzs: yes
  when: certificate_about_to_expire.files | length > 0
  register: ssl_certificate

- name: "Create PKCS12 Keystore for certificate"
  become: yes
  shell: "openssl pkcs12 -export -in {{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}.crt -inkey {{ letsencrypt_keys_dir }}/{{ domain_name }}.key -out {{ letsencrypt_certs_dir }}/{{ domain_name }}.p12 -name {{ domain_name }} -password pass:{{ keystore_password }} -CAfile {{ letsencrypt_certs_dir }}/chain_{{ domain_name }}.crt -caname root"
  when: certificate_about_to_expire.files | length > 0

- name: "Remove .well-known/acme-challenge directory"
  become: yes
  file:
    path: /var/www/html/.well-known/acme-challenge
    state: absent
  when: certificate_about_to_expire.files | length > 0