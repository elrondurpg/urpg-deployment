- name: Install Java with Yum 
  become: yes
  yum:
    name: java
    state: present

- name: Create {{ application_group_name }} user group
  become: yes
  group:
    name: "{{ application_group_name }}"
    state: present

- name: Create {{ application_user_name }} user
  become: yes
  group:
    name: "{{ application_user_name }}"
    state: present

- name: "Get the latest release metadata of {{ artifact_id }}"
  uri:
    url: "https://api.github.com/repos/{{github_user}}/{{github_repo}}/releases/latest"
    return_content: yes
    headers:
      Authorization: "token {{ artifact_download_token }}"
  register: github_response

- set_fact:
    binary_asset_url: "{{  github_response.json.assets|json_query(query) }}"
  vars:
    query: "[?starts_with(name,'{{ artifact_id }}')].url | [0]"   

- name: "Get the latest release URI of {{ artifact_id }}"
  uri:
    url: "{{ binary_asset_url }}"
    return_content: no
    follow_redirects: none
    status_code: 302
    headers:
      Authorization: "token {{ artifact_download_token }}"
      Accept: "application/octet-stream"
  register: assets

- name: "Create download folder for {{ artifact_id }} at {{ download_path }}"
  become: yes
  file: 
    path: "{{ download_path }}"
    state: directory

- name: "Download the latest release of {{ artifact_id }}"
  become: yes
  get_url:
    url: "{{ assets.location }}"
    dest: "{{ download_path }}/{{ jar_name }}"
    mode: 0755
  register: jar_file

- name: "Create log file directory at /var/log/{{ artifact_id }}"
  become: yes
  file: 
    path: "/var/log/{{ artifact_id }}"
    state: directory

- name: Install URPG Server service file
  become: yes
  template:
    src: 'urpgserver.service.j2'
    dest: '/etc/systemd/system/multi-user.target.wants/urpgserver.service'
    mode: '644'
    owner: root
    group: root
  register: service_file

- name: Invoke systemctl daemon reload if URPG Server service file was changed
  become: yes
  systemd:
    daemon_reload: yes
  when: service_file.changed

- name: Ensure URPG Server is running; don't restart if it's already running and nothing changed
  service:
    name: urpgserver 
    state: started
  when: service_file.changed == false and jar_file.changed == false

- name: Restart URPG Server because something changed
  become: yes
  service:
    name: urpgserver
    state: restarted
  when: service_file.changed or jar_file.changed